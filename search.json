[{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://petersonr.github.io/fastTS/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://petersonr.github.io/fastTS/articles/case_studies.html","id":"lake-huron-data-set","dir":"Articles","previous_headings":"","what":"Lake Huron data set","title":"Simple Case Studies","text":"","code":"data(\"LakeHuron\")  fit_LH <- fastTS(LakeHuron)  fit_LH #>  PF_gamma best_AICc best_BIC #>      0.00  147.2053 159.8118 #>      0.25  146.3811 156.7937 #>      0.50  146.0177 156.4739 #>      1.00  144.1002 154.4967 #>      2.00  143.0362 153.2544 #>      4.00  149.8227 156.1558 #>      8.00  149.8227 156.1558 #>     16.00  149.8227 156.1558 #>  #> Test-set prediction accuracy #>       rmse       rsq       mae #> AIC 0.7751 0.6203825 0.5888855 #> BIC 0.7751 0.6203825 0.5888855 coef(fit_LH) #>                 0.00069 #> (Intercept) 111.8740292 #> lag1          1.1003545 #> lag2         -0.4732437 #> lag3          0.1796316 #> lag4          0.0000000 #> lag5          0.0000000 #> lag6          0.0000000 #> lag7          0.0000000 #> lag8          0.0000000 #> lag9          0.0000000"},{"path":"https://petersonr.github.io/fastTS/articles/case_studies.html","id":"eustockmarkets","dir":"Articles","previous_headings":"","what":"EuStockMarkets","title":"Simple Case Studies","text":"univariate time series suspected trend, EuStockMarkets data set,","code":"data(\"EuStockMarkets\") X <- as.numeric(time(EuStockMarkets)) X_sp <- splines::bs(X-min(X), df = 9)  fit_stock <- fastTS(log(EuStockMarkets[,1]), n_lags_max = 400, X = X_sp, w_exo = \"unpenalized\") tail(coef(fit_stock), 11) #>           0.0000096 #> lag399  0.000000000 #> lag400  0.000000000 #> 1       0.251818563 #> 2      -0.064008340 #> 3      -0.022147416 #> 4      -0.015421857 #> 5      -0.014734876 #> 6       0.001020223 #> 7       0.011708216 #> 8       0.311147538 #> 9       0.000000000  # insert plot?"},{"path":[]},{"path":"https://petersonr.github.io/fastTS/articles/case_studies.html","id":"nottem","dir":"Articles","previous_headings":"Seasonal examples","what":"Nottem","title":"Simple Case Studies","text":"","code":"data(\"nottem\") fit_nt <- fastTS(nottem, n_lags_max = 24) coef(fit_nt) #>                  0.0393 #> (Intercept) 11.89830169 #> lag1         0.40437830 #> lag2         0.00000000 #> lag3        -0.06838188 #> lag4        -0.09660138 #> lag5        -0.01640032 #> lag6         0.00000000 #> lag7        -0.04079986 #> lag8         0.00000000 #> lag9         0.00000000 #> lag10        0.00000000 #> lag11        0.16707390 #> lag12        0.00000000 #> lag13        0.05894906 #> lag14        0.00000000 #> lag15        0.00000000 #> lag16        0.00000000 #> lag17        0.00000000 #> lag18        0.00000000 #> lag19        0.00000000 #> lag20        0.00000000 #> lag21        0.00000000 #> lag22        0.00000000 #> lag23        0.00000000 #> lag24        0.34816025"},{"path":"https://petersonr.github.io/fastTS/articles/case_studies.html","id":"ukdriverdeaths","dir":"Articles","previous_headings":"Seasonal examples","what":"UKDriverDeaths","title":"Simple Case Studies","text":"Adding holiday indicators…","code":"data(\"UKDriverDeaths\") fit_ukdd <- fastTS(UKDriverDeaths, n_lags_max = 24) coef(fit_ukdd) #>                  0.0282 #> (Intercept) 198.6573213 #> lag1          0.3805100 #> lag2          0.0000000 #> lag3          0.0000000 #> lag4          0.0000000 #> lag5          0.0000000 #> lag6          0.0000000 #> lag7          0.0000000 #> lag8          0.0000000 #> lag9          0.0000000 #> lag10         0.0000000 #> lag11         0.1645141 #> lag12         0.4682378 #> lag13         0.0000000 #> lag14        -0.1357345 #> lag15         0.0000000 #> lag16         0.0000000 #> lag17         0.0000000 #> lag18         0.0000000 #> lag19         0.0000000 #> lag20         0.0000000 #> lag21         0.0000000 #> lag22         0.0000000 #> lag23         0.0000000 #> lag24         0.0000000"},{"path":"https://petersonr.github.io/fastTS/articles/case_studies.html","id":"sunspot","dir":"Articles","previous_headings":"Seasonal examples","what":"sunspot","title":"Simple Case Studies","text":"Model summaries","code":"data(\"sunspot.month\") fit_ssm <- fastTS(sunspot.month) fit_ssm #>  PF_gamma best_AICc best_BIC #>      0.00  18373.20 18506.04 #>      0.25  18356.15 18467.11 #>      0.50  18348.28 18467.59 #>      1.00  18417.42 18502.81 #>      2.00  18569.61 18598.12 #>      4.00  18782.77 18799.88 #>      8.00  18782.77 18799.88 #>     16.00  18782.77 18799.88 #>  #> Test-set prediction accuracy #>         rmse       rsq      mae #> AIC 15.94153 0.8920872 11.85384 #> BIC 16.04978 0.8906613 11.99382 summary(fit_ssm) #> Using a basic kernel estimate for local fdr; consider installing the ashr package for more accurate estimation.  See ?local_mfdr #> Model summary at optimal AICc (lambda=0.0514; gamma=0.5) #> lasso-penalized linear regression with n=2224, p=317 #> At lambda=0.0514: #> ------------------------------------------------- #>   Nonzero coefficients         :  22 #>   Expected nonzero coefficients:   9.57 #>   Average mfdr (22 features)   :   0.435 #>  #>         Estimate       z       mfdr Selected #> lag1    0.543429 75.5671    < 1e-04        * #> lag2    0.100936 14.3108    < 1e-04        * #> lag9    0.095814 13.9892    < 1e-04        * #> lag4    0.088981 12.7748    < 1e-04        * #> lag3    0.077649 11.1365    < 1e-04        * #> lag6    0.058591  8.7845    < 1e-04        * #> lag5    0.031138  4.9444 0.00032487        * #> lag18  -0.028505 -4.4224 0.00358883        * #> lag102  0.021959  3.7402 0.05826384        * #> lag27  -0.019987 -3.4042 0.10962497        * #> lag212 -0.018947 -3.1479 0.18172134        * #> lag24  -0.018334 -3.0999 0.22925539        * #> lag111  0.017205  2.9704 0.42075053        * #> lag92   0.017222  2.8639 0.56575685        * #> lag12   0.012107  2.3759 1.00000000        * #> lag20  -0.007329 -1.6906 1.00000000        * #> lag21  -0.009982 -2.0002 1.00000000        * #> lag34  -0.004472 -1.3302 1.00000000        * #> lag55  -0.003429 -1.2274 1.00000000        * #> lag96   0.001556  1.0625 1.00000000        * #> lag275  0.000595  0.8962 1.00000000        * #> lag292 -0.010658 -1.9653 1.00000000        *"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"the-uihc_ed_arrivals-data-set","dir":"Articles","previous_headings":"","what":"The uihc_ed_arrivals data set","title":"Time Series Modeling with Multiple Modes","text":"University Iowa Hospitals Clinics (UIHC) Emergency Department Arrivals data set included component package, consists 41,640 hourly counts number new arrivals ED spanning years 2013-2018. See data set documentation, ?uihc_ed_arrivals, information.","code":""},{"path":[]},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"endogenous-model-srlpac","dir":"Articles","previous_headings":"Modeling the data","what":"Endogenous model (SRLPAC)","title":"Time Series Modeling with Multiple Modes","text":"First ’ll load summarize data. Note although plenty information year, month, day, data set already sorted time. Let’s pull outcome look .  OK, helpful visually. trap close asymptopia. Let’s look bit closer partial autocorrelation function see kind seasonality autoregressive (AR) structure dealing .  Clearly multiple modes seasonality hourly data, likely corresponding observed shift-based, daily, weekly patterns. Thankfully sparsity ranked lasso (SRL) time series fitting procedure can handle situation stride. can fit endogenous SRLPAC model using one line code might take 1-2 minutes run: can investigate performance SRLPAC model using associated print, coef, summary, plot functions. default, fastTS used 8 possible tuning parameters \\(\\gamma\\), penalty weight exponent, using AICc judge appears best value 0.5. default, argument p_train set 0.8, means also get prediction accuracy left-20% data, revealing R-squared 53.1%, meaning half variance hourly visits ED can explained multi-modal seasonal local autoregressive patterns. lasso’s solution path lags can seen via plot function.  see (long) list selected coefficients, summary function can used.","code":"data(\"uihc_ed_arrivals\") str(uihc_ed_arrivals) #> 'data.frame':    41640 obs. of  17 variables: #>  $ Year    : num  2013 2013 2013 2013 2013 ... #>  $ Quarter : Factor w/ 4 levels \"Q1\",\"Q2\",\"Q3\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Month   : num  7 7 7 7 7 7 7 7 7 7 ... #>  $ Day     : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ Hour    : num  0 1 2 3 4 5 6 7 8 9 ... #>  $ Arrivals: num  5 5 8 2 2 1 4 1 4 6 ... #>  $ Date    : Date, format: \"2013-07-01\" \"2013-07-01\" ... #>  $ Weekday : Ord.factor w/ 7 levels \"Sun\"<\"Mon\"<\"Tue\"<..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ temp    : num  57 57 57 56 56 57 59 60 60 61 ... #>  $ xmas    : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ xmas2   : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ nye     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ nyd     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ thx     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ thx1    : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ ind     : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ game_day: num  0 0 0 0 0 0 0 0 0 0 ... y <- uihc_ed_arrivals$Arrivals plot(y, type = \"l\") # number of maximum lags to consider n_lags_max <- 24*7*5 # consider 5 weeks' data lags pacfs <- pacf(ts(y), lag.max = n_lags_max, plot = F) plot(pacfs) srlpac <- fastTS(y, n_lags_max = n_lags_max) srlpac #>  PF_gamma best_AICc best_BIC #>      0.00  155231.7 156254.6 #>      0.25  155195.8 155964.1 #>      0.50  155190.4 155939.0 #>      1.00  155457.4 155943.7 #>      2.00  157625.4 157826.7 #>      4.00  162570.0 162637.1 #>      8.00  169220.7 169245.9 #>     16.00  169220.7 169245.9 #>  #> Test-set prediction accuracy #>         rmse       rsq      mae #> AIC 2.661505 0.5310037 2.059681 #> BIC 2.664962 0.5298691 2.064657 plot(srlpac) summary(srlpac) #> Using a basic kernel estimate for local fdr; consider installing the ashr package for more accurate estimation.  See ?local_mfdr #> Model summary at optimal AICc (lambda=0.0015; gamma=0.5) #> lasso-penalized linear regression with n=32472, p=840 #> At lambda=0.0015: #> ------------------------------------------------- #>   Nonzero coefficients         : 201 #>   Expected nonzero coefficients: 124.63 #>   Average mfdr (201 features)  :   0.620 #>  #>          Estimate       z       mfdr Selected #> lag1    5.047e-02 13.5997    < 1e-04        * #> lag168  3.075e-02  8.6541    < 1e-04        * #> lag336  3.011e-02  8.5221    < 1e-04        * #> lag840  2.720e-02  7.9715    < 1e-04        * #> lag504  2.760e-02  7.9247    < 1e-04        * #> lag673  2.577e-02  7.5147    < 1e-04        * #> lag505  2.590e-02  7.4932    < 1e-04        * #> lag672  2.494e-02  7.3047    < 1e-04        * #> lag337  2.465e-02  7.1122    < 1e-04        * #> lag3    2.395e-02  6.7734    < 1e-04        * #> lag503  2.304e-02  6.7301    < 1e-04        * #> lag167  2.305e-02  6.6151    < 1e-04        * #> lag671  2.093e-02  6.2762    < 1e-04        * #> lag170  2.136e-02  6.2511    < 1e-04        * #> lag2    2.248e-02  6.2089    < 1e-04        * #> lag47   2.191e-02  6.2032    < 1e-04        * #> lag144  2.013e-02  5.8676    < 1e-04        * #> lag432  1.908e-02  5.7448    < 1e-04        * #> lag72   1.985e-02  5.6922    < 1e-04        * #> lag674  1.752e-02  5.4118    < 1e-04        * #> lag24   1.899e-02  5.3635    < 1e-04        * #> lag96   1.828e-02  5.3247    < 1e-04        * #> lag647  1.662e-02  5.1731    < 1e-04        * #> lag839  1.594e-02  5.1414    < 1e-04        * #> lag71   1.780e-02  5.1341    < 1e-04        * #> lag335  1.643e-02  4.9851    < 1e-04        * #> lag73   1.679e-02  4.9224 0.00012924        * #> lag166  1.649e-02  4.9127 0.00013687        * #> lag528  1.511e-02  4.8434 0.00021101        * #> lag22   1.702e-02  4.8170 0.00025250        * #> lag23   1.687e-02  4.7827 0.00032225        * #> lag283 -1.541e-02 -4.7905 0.00117894        * #> lag644 -1.410e-02 -4.5745 0.00324570        * #> lag481  1.334e-02  4.2374 0.00578817        * #> lag192  1.299e-02  4.1148 0.00659483        * #> lag190  1.246e-02  4.0150 0.00787831        * #> lag169  1.282e-02  3.9885 0.00834837        * #> lag838  1.104e-02  3.9208 0.00986811        * #> lag600  1.139e-02  3.8620 0.01169054        * #> lag648  1.110e-02  3.7956 0.01447996        * #> lag649  1.097e-02  3.7373 0.01783076        * #> lag143  1.197e-02  3.7338 0.01806154        * #> lag25   1.242e-02  3.6694 0.02332690        * #> lag6    1.245e-02  3.6057 0.03075707        * #> lag670  1.029e-02  3.5438 0.04120586        * #> lag770  9.780e-03  3.5034 0.05043729        * #> lag338  1.036e-02  3.4741 0.05863041        * #> lag520 -1.114e-02 -3.7583 0.07077636        * #> lag533 -1.006e-02 -3.5702 0.08643562        * #> lag317 -9.565e-03 -3.4451 0.10139174        * #> lag241  9.869e-03  3.3625 0.10348058        * #> lag152 -9.465e-03 -3.2413 0.13291889        * #> lag212 -9.045e-03 -3.2280 0.13590142        * #> lag700 -8.466e-03 -3.1938 0.14428893        * #> lag462 -8.431e-03 -3.1205 0.16765963        * #> lag634 -7.853e-03 -3.0316 0.21023330        * #> lag502  8.282e-03  2.9906 0.22748657        * #> lag263  8.436e-03  2.9902 0.22757536        * #> lag288  8.089e-03  2.9506 0.23613700        * #> lag191  8.389e-03  2.9402 0.23868476        * #> lag816  7.216e-03  2.9364 0.23964450        * #> lag4    9.260e-03  2.9319 0.24079490        * #> lag547 -7.587e-03 -2.9837 0.24196266        * #> lag519 -7.779e-03 -2.9828 0.24261208        * #> lag575  6.819e-03  2.7771 0.29361989        * #> lag316 -7.387e-03 -2.9072 0.31061649        * #> lag26   8.463e-03  2.7197 0.31808234        * #> lag214  6.894e-03  2.6843 0.33398265        * #> lag46   8.541e-03  2.6800 0.33590529        * #> lag492 -6.765e-03 -2.8788 0.34297048        * #> lag564  6.785e-03  2.6438 0.35259573        * #> lag145  7.483e-03  2.6102 0.36851885        * #> lag121  7.381e-03  2.5599 0.39306042        * #> lag55   1.701e-03  2.5127 0.41738231        * #> lag40   5.068e-03  2.5026 0.42284245        * #> lag334  6.476e-03  2.4806 0.43499775        * #> lag440  5.460e-03  2.4031 0.48283202        * #> lag312  6.049e-03  2.3948 0.48848405        * #> lag792  4.504e-03  2.3945 0.48870811        * #> lag696  3.688e-03  2.3900 0.49181933        * #> lag7    7.894e-03  2.3793 0.49936433        * #> lag142  6.509e-03  2.3462 0.52449501        * #> lag37  -8.194e-03 -2.7582 0.53142891        * #> lag264  5.775e-03  2.2844 0.57848564        * #> lag615  4.703e-03  2.2487 0.61417945        * #> lag8    7.358e-03  2.2373 0.62625252        * #> lag116 -6.727e-03 -2.6938 0.66474447        * #> lag119  6.131e-03  2.1880 0.68266674        * #> lag697  3.769e-03  2.1711 0.70363651        * #> lag479  4.822e-03  2.1663 0.70966547        * #> lag722  3.862e-03  2.1559 0.72298340        * #> lag781  5.059e-03  2.1534 0.72614207        * #> lag384  4.518e-03  2.1383 0.74594804        * #> lag216  4.961e-03  2.1265 0.76177334        * #> lag580 -5.824e-03 -2.6429 0.77812056        * #> lag360  4.369e-03  2.1069 0.78857230        * #> lag817  3.194e-03  2.0851 0.81897597        * #> lag406  3.941e-03  2.0759 0.83214380        * #> lag11  -3.313e-04 -0.3710 0.88337658        * #> lag266  4.313e-03  2.0302 0.89765999        * #> lag70   5.802e-03  2.0072 0.93095507        * #> lag60  -8.267e-04 -0.9440 0.96962579        * #> lag5    1.796e-03  0.7846 1.00000000        * #> lag10   4.621e-03  1.5155 1.00000000        * #> lag13   3.796e-03  1.3676 1.00000000        * #> lag15   9.660e-04  0.8174 1.00000000        * #> lag18   3.299e-03  1.4689 1.00000000        * #> lag21   5.688e-03  1.8231 1.00000000        * #> lag30   5.488e-04  0.9108 1.00000000        * #> lag32   1.548e-03  1.2160 1.00000000        * #> lag34   3.990e-03  1.7879 1.00000000        * #> lag41  -1.492e-03 -1.3014 1.00000000        * #> lag50  -1.587e-03 -1.2593 1.00000000        * #> lag54  -3.115e-03 -1.4952 1.00000000        * #> lag58   5.343e-04  1.1262 1.00000000        * #> lag74   4.818e-03  1.9117 1.00000000        * #> lag76  -3.985e-03 -1.8829 1.00000000        * #> lag84  -3.251e-03 -1.6239 1.00000000        * #> lag92   1.436e-03  1.3917 1.00000000        * #> lag95   4.709e-03  1.7707 1.00000000        * #> lag97   4.139e-03  1.6618 1.00000000        * #> lag112  2.772e-04  1.1772 1.00000000        * #> lag120  4.499e-03  1.7794 1.00000000        * #> lag126 -1.122e-03 -1.0248 1.00000000        * #> lag133 -6.166e-04 -1.2922 1.00000000        * #> lag136  2.052e-03  1.7073 1.00000000        * #> lag141  3.818e-03  1.7347 1.00000000        * #> lag148 -2.829e-03 -1.6247 1.00000000        * #> lag149 -4.482e-03 -1.9845 1.00000000        * #> lag150 -3.738e-03 -1.8145 1.00000000        * #> lag154 -1.846e-03 -1.4016 1.00000000        * #> lag165  1.002e-05  0.7632 1.00000000        * #> lag172 -3.634e-03 -1.9687 1.00000000        * #> lag185 -6.248e-03 -2.4878 1.00000000        * #> lag189  1.049e-03  1.2842 1.00000000        * #> lag193  1.743e-03  1.3299 1.00000000        * #> lag196 -1.283e-03 -1.3630 1.00000000        * #> lag198 -1.105e-03 -1.3789 1.00000000        * #> lag204 -6.142e-04 -1.2745 1.00000000        * #> lag211 -5.535e-04 -1.1453 1.00000000        * #> lag217  2.580e-03  1.6224 1.00000000        * #> lag232  3.133e-03  1.8421 1.00000000        * #> lag255  2.685e-03  1.7900 1.00000000        * #> lag259 -1.317e-03 -1.3618 1.00000000        * #> lag287  2.728e-03  1.6777 1.00000000        * #> lag295 -2.249e-04 -1.1144 1.00000000        * #> lag311  9.230e-04  1.1582 1.00000000        * #> lag315 -8.906e-05 -1.2992 1.00000000        * #> lag322 -1.336e-03 -1.5794 1.00000000        * #> lag356 -1.982e-03 -1.4913 1.00000000        * #> lag359  2.203e-03  1.5691 1.00000000        * #> lag364 -1.817e-03 -1.4860 1.00000000        * #> lag389 -1.459e-03 -1.3790 1.00000000        * #> lag397  3.209e-03  1.8182 1.00000000        * #> lag402  3.410e-03  1.8544 1.00000000        * #> lag408  6.127e-04  1.2396 1.00000000        * #> lag409  1.209e-03  1.4095 1.00000000        * #> lag456  2.063e-03  1.6446 1.00000000        * #> lag461 -1.487e-03 -1.4587 1.00000000        * #> lag463 -5.048e-03 -2.2758 1.00000000        * #> lag480  2.448e-03  1.6650 1.00000000        * #> lag489 -5.052e-03 -2.3007 1.00000000        * #> lag491 -4.405e-03 -2.3206 1.00000000        * #> lag501  3.295e-03  1.8219 1.00000000        * #> lag506  2.372e-03  1.6797 1.00000000        * #> lag515 -2.407e-03 -1.7750 1.00000000        * #> lag518 -2.619e-03 -1.7741 1.00000000        * #> lag524 -4.711e-03 -2.2013 1.00000000        * #> lag531 -1.243e-03 -1.3870 1.00000000        * #> lag552  1.179e-03  1.6796 1.00000000        * #> lag553  1.176e-03  1.5669 1.00000000        * #> lag569  1.012e-03  1.3497 1.00000000        * #> lag579 -3.673e-03 -1.9986 1.00000000        * #> lag592  1.722e-04  1.0859 1.00000000        * #> lag611 -4.434e-03 -2.2845 1.00000000        * #> lag616  5.466e-04  1.2661 1.00000000        * #> lag638 -4.583e-03 -2.1926 1.00000000        * #> lag639  3.052e-03  1.8619 1.00000000        * #> lag640  3.465e-04  1.2975 1.00000000        * #> lag642 -1.341e-03 -1.4342 1.00000000        * #> lag660 -3.190e-03 -2.0548 1.00000000        * #> lag676 -4.239e-04 -1.2965 1.00000000        * #> lag677 -2.231e-03 -1.7961 1.00000000        * #> lag685 -3.053e-03 -2.1499 1.00000000        * #> lag692 -1.303e-03 -1.4646 1.00000000        * #> lag693  4.405e-04  1.2581 1.00000000        * #> lag701 -1.181e-03 -1.5956 1.00000000        * #> lag712 -2.882e-03 -1.7862 1.00000000        * #> lag713 -1.645e-03 -1.5430 1.00000000        * #> lag716 -5.414e-04 -1.3492 1.00000000        * #> lag719  1.363e-03  1.7168 1.00000000        * #> lag727 -2.566e-03 -1.7564 1.00000000        * #> lag744  1.899e-03  1.7906 1.00000000        * #> lag747 -1.567e-04 -1.3046 1.00000000        * #> lag748 -1.401e-03 -1.6702 1.00000000        * #> lag753  1.059e-03  1.2851 1.00000000        * #> lag775  3.850e-04  1.1682 1.00000000        * #> lag779 -1.751e-03 -1.8628 1.00000000        * #> lag796 -2.115e-03 -1.7097 1.00000000        * #> lag819  6.947e-05  1.0180 1.00000000        * #> lag837  1.591e-03  1.4840 1.00000000        *"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"exogenous-model-srlpacx","dir":"Articles","previous_headings":"Modeling the data","what":"Exogenous model (SRLPACx)","title":"Time Series Modeling with Multiple Modes","text":"’s slightly work add exogenous features, might help us add fixed effects weekday, temperature, holiday indicators. extra work setting matrix exogenous features. result model matrix month indicators (reference March), scaled temperature covariate, holiday indicator variables. Now matrix exogenous features, can pass fastTS get SRLPACx model. also set w_exo=\"unpenalized\" allow us conduct statistical inference exogenous variable coefficients (default, penalized using adaptive-lasso-style penalty weights, makes formal inference difficult). S3 methods apply can used investigate performance SLRPACx model. , fastTS used 8 possible tuning parameters \\(\\gamma\\), appears best value 0.5. addition exogenous features slightly improved prediction accuracy left-test data, R-squared 53.3%. may appear small increase, add (see shortly) predictions made multiple steps ahead, cumulative sum predictions interest. lasso’s solution path lags can seen via plot function.  see (long) list selected coefficients, summary function can used. case, ’re interested exogenous features, can extracted via unpenTable object results returned summary (thanks large part ncvreg package). can make nice looking figure.","code":"X_day <- as.matrix(dplyr::select(uihc_ed_arrivals, xmas:game_day)) X_month <- model.matrix(~relevel(factor(Month), ref = 3) + I(temp/10),                          data = uihc_ed_arrivals)[,-1] X <- cbind(X_month, X_day) colnames(X) <- gsub(\"relevel.factor.Month., ref = 3.\", \"Month\", colnames(X)) head(X) #>   Month1 Month2 Month4 Month5 Month6 Month7 Month8 Month9 Month10 Month11 #> 1      0      0      0      0      0      1      0      0       0       0 #> 2      0      0      0      0      0      1      0      0       0       0 #> 3      0      0      0      0      0      1      0      0       0       0 #> 4      0      0      0      0      0      1      0      0       0       0 #> 5      0      0      0      0      0      1      0      0       0       0 #> 6      0      0      0      0      0      1      0      0       0       0 #>   Month12 I(temp/10) xmas xmas2 nye nyd thx thx1 ind game_day #> 1       0        5.7    0     0   0   0   0    0   0        0 #> 2       0        5.7    0     0   0   0   0    0   0        0 #> 3       0        5.7    0     0   0   0   0    0   0        0 #> 4       0        5.6    0     0   0   0   0    0   0        0 #> 5       0        5.6    0     0   0   0   0    0   0        0 #> 6       0        5.7    0     0   0   0   0    0   0        0 srlpacx <- fastTS(y, X=X, n_lags_max = n_lags_max, w_exo = \"unpenalized\") srlpacx #>  PF_gamma best_AICc best_BIC #>      0.00  155062.8 156237.2 #>      0.25  155023.3 155978.9 #>      0.50  155007.5 155974.7 #>      1.00  155300.0 155997.0 #>      2.00  157356.9 157742.6 #>      4.00  162064.9 162308.1 #>      8.00  168573.6 168766.5 #>     16.00  168573.6 168766.5 #>  #> Test-set prediction accuracy #>         rmse       rsq      mae #> AIC 2.656204 0.5328857 2.054256 #> BIC 2.658211 0.5321868 2.057566 plot(srlpacx) s <- summary(srlpacx) s$unpenTable b <- s$unpenTable[,1] se_b <- s$unpenTable[,2]  ci_lb <- b - se_b * 1.96 ci_ub <- b + se_b * 1.96  old <- par(mar = c(5,9,4,2) + .1) plot(b, length(se_b):1, xlim = range(ci_lb, ci_ub), pch = 20,      col = 4, yaxt = \"n\", ylab = \"\", xlab = \"Coefficient (Change in Hourly ER visits)\") abline(v = 0, lty = 2) segments(x0 = ci_lb, x1 = ci_ub, y0 = length(se_b):1, lty = 2) labs <- gsub(\"factor\\\\(Month\\\\)\", \"\", names(b)) labs <- c(month.name[-3], \"10-degree (F)\", \"Christmas\", \"Christmas+1\",           \"New Year's Eve\", \"New Years Day\",           \"Thanksgiving\", \"Thanksgiving+1\", \"Independence Day\",           \"Hawkeye Gameday\") axis(2, length(se_b):1, labs, las = 2) par(old)"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"making-predictions","dir":"Articles","previous_headings":"","what":"Making predictions","title":"Time Series Modeling with Multiple Modes","text":"time series models ones fit SRLPAC, straightforward get 1-step-ahead predictions. default, predictions include -sample --sample (test set) predictions; see delineate two.","code":"p_1step_endo <- predict(srlpac) p_1step_exo <- predict(srlpacx)"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"k-step-ahead-predictions","dir":"Articles","previous_headings":"Making predictions","what":"k-step ahead predictions","title":"Time Series Modeling with Multiple Modes","text":"’s bit involved process get 2, 3, \\(k\\)-step ahead predictions computationally, 1-step \\(k-1\\)-step predictions must computed iteratively order get \\(k\\)-step ahead predictions. user’s perspective, ’s still straightforward though. Evidently (expected) predictions highly correlated . Note going missing (NA) values front end prediction vector, since observations eaten lags fitting procedure.","code":"p_2step_endo <- predict(srlpac, n_ahead = 2) p_2step_exo <- predict(srlpacx, n_ahead = 2)  p_10step_endo <- predict(srlpac, n_ahead = 10) p_10step_exo <- predict(srlpacx, n_ahead = 10) preds <- cbind(p_1step_endo, p_2step_endo, p_10step_endo,                 p_1step_exo, p_2step_exo, p_10step_exo) cor(preds, use = \"pairwise\") #>               p_1step_endo p_2step_endo p_10step_endo p_1step_exo p_2step_exo #> p_1step_endo     1.0000000    0.9989157     0.9989135   0.9973023   0.9962257 #> p_2step_endo     0.9989157    1.0000000     0.9999972   0.9962491   0.9970523 #> p_10step_endo    0.9989135    0.9999972     1.0000000   0.9962476   0.9970503 #> p_1step_exo      0.9973023    0.9962491     0.9962476   1.0000000   0.9991798 #> p_2step_exo      0.9962257    0.9970523     0.9970503   0.9991798   1.0000000 #> p_10step_exo     0.9962125    0.9970381     0.9970410   0.9991785   0.9999984 #>               p_10step_exo #> p_1step_endo     0.9962125 #> p_2step_endo     0.9970381 #> p_10step_endo    0.9970410 #> p_1step_exo      0.9991785 #> p_2step_exo      0.9999984 #> p_10step_exo     1.0000000"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"cumulative-predictions","dir":"Articles","previous_headings":"Making predictions","what":"Cumulative predictions","title":"Time Series Modeling with Multiple Modes","text":"applied perspective, ’s useful predict many visits ED might see next hour, next 10 hours. ’s much useful able predict many patients might come given 10 hour (shift-length) period. predict.fastTS function provides functionality \\(k\\)-step ahead cumulative (rolling sum) predictions via cumulative argument. Let’s calculate 10-hour rolling sum predictions using 1-10 step ahead predictions using models. can compute mean absolute error (MAE) (similar metrics) using functionality yardstick package. SRLPAC(x) methods able predict number patients arrive given 10-hour window within average 6.8 patients. may pertinent investigate predictive accuracy test data set, can done extracting train_idx object fastTS object. can also compute overall R-squared: R-squared just test data. ’s interesting R-squared increases horizon cumulative predictions increases: ’s 0.85 10-hour cumulative predictions yet 0.53 standard 1-step predictions. seems imply predictive gains process aggregating longer periods time. investigation may warranted .","code":"y_c10hr <- RcppRoll::roll_sum(y, 10, align = \"right\", fill = NA) p_10step_csum_endo <- predict(srlpac, n_ahead = 10, cumulative = 10) p_10step_csum_exo <- predict(srlpacx, n_ahead = 10, cumulative = 10) mae_vec(y_c10hr, p_10step_csum_endo) #> [1] 6.820224 mae_vec(y_c10hr, p_10step_csum_exo) #> [1] 6.788572 mae_vec(y_c10hr[-srlpac$train_idx], p_10step_csum_endo[-srlpac$train_idx]) #> [1] 6.795522 mae_vec(y_c10hr[-srlpacx$train_idx], p_10step_csum_exo[-srlpacx$train_idx]) #> [1] 6.81384 rsq_vec(y_c10hr, p_10step_csum_endo) #> [1] 0.8528324 rsq_vec(y_c10hr, p_10step_csum_exo) #> [1] 0.855573 rsq_vec(y_c10hr[-srlpac$train_idx], p_10step_csum_endo[-srlpac$train_idx]) #> [1] 0.8522335 rsq_vec(y_c10hr[-srlpacx$train_idx], p_10step_csum_exo[-srlpacx$train_idx]) #> [1] 0.8529352"},{"path":"https://petersonr.github.io/fastTS/articles/hourly_er_visits.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Time Series Modeling with Multiple Modes","text":"ongoing work comparing SRL-based approaches competing approaches.","code":""},{"path":"https://petersonr.github.io/fastTS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Andrew Peterson. Author, maintainer, copyright holder.","code":""},{"path":"https://petersonr.github.io/fastTS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ryan . Peterson & Joseph E. Cavanaugh (2024). Fast, effective, coherent time series modeling using sparsity-ranked lasso. Statistical Modelling (press). DOI: TBD","code":"@Article{,   title = {Fast, effective, and coherent time series modeling using the sparsity-ranked lasso},   author = {Ryan A. Peterson & Joseph E. Cavanaugh},   journal = {Statistical Modelling (accepted)},   year = {2024},   volume = {TBD},   number = {TBD},   pages = {TBD},   doi = {https://doi.org/10.48550/arXiv.2211.01492}, }"},{"path":[]},{"path":"https://petersonr.github.io/fastTS/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Fast Time Series Modeling with the Sparsity Ranked Lasso","text":"fastTS package efficiently fits long, high-frequency time series complex seasonality, even high-dimensional exogenous feature set. implements sparsity-ranked lasso (similar methods) time series data. Originally described Peterson Cavanaugh (2022) context variable selection interactions /polynomials, ranked sparsity philosophy variable selection presence prior informational asymmetry. time series data complex seasonality exogenous features; see Peterson Cavanaugh (2023+), also describes package greater detail. basic premise utilize sparsity-ranked lasso (similar) less skeptical recent lags, suspected seasonal relationships.","code":""},{"path":"https://petersonr.github.io/fastTS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast Time Series Modeling with the Sparsity Ranked Lasso","text":"can install development version fastTS like : , install CRAN :","code":"# install.packages(\"remotes\") remotes::install_github(\"PetersonR/fastTS\") install.packages(\"fastTS\")"},{"path":"https://petersonr.github.io/fastTS/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fast Time Series Modeling with the Sparsity Ranked Lasso","text":"basic example.","code":"library(fastTS)  y <- cumsum(rnorm(100)) fit <- fastTS(y, gamma = c(0, .5))  fit #>  PF_gamma best_AICc best_BIC #>       0.0  178.4453 189.6189 #>       0.5  175.3748 185.6797 #>  #> Test-set prediction accuracy #>          rmse       rsq      mae #> AIC 0.7375194 0.4263235 0.598126 #> BIC 0.7375194 0.4263235 0.598126"},{"path":"https://petersonr.github.io/fastTS/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"Fast Time Series Modeling with the Sparsity Ranked Lasso","text":"learn see methodology action, see: Simple case studies vignette Modeling hourly ER arrival data complex seasonality Denver’s 2022 ‘Zero Fare Cleaner Air’ campaign actually work?","code":""},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform time series ranked sparsity methods — fastTS","title":"Perform time series ranked sparsity methods — fastTS","text":"Perform time series ranked sparsity methods","code":""},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform time series ranked sparsity methods — fastTS","text":"","code":"fastTS(   y,   X = NULL,   n_lags_max,   gamma = c(0, 2^(-2:4)),   ptrain = 0.8,   pf_eps = 0.01,   w_endo,   w_exo,   ncvreg_args = list(penalty = \"lasso\", returnX = FALSE, lambda.min = 0.001) )  # S3 method for fastTS plot(x, log.l = TRUE, ...)  # S3 method for fastTS coef(object, choose = c(\"AICc\", \"BIC\", \"all\"), ...)  # S3 method for fastTS print(x, ...)  # S3 method for fastTS summary(object, ...)"},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform time series ranked sparsity methods — fastTS","text":"y univariate time series outcome X matrix predictors (intercept) n_lags_max maximum number lags consider gamma vector exponent weights ptrain prop. leave test data pf_eps penalty factors set zero w_endo optional pre-specified weights endogenous terms w_exo optional pre-specified weights exogenous terms (see details) ncvreg_args additional args pass ncvreg x fastTS object log.l x-axis (lambda) logged? ... passed downstream functions object fastTS object choose criterion use lambda selection (AICc, BIC, )","code":""},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform time series ranked sparsity methods — fastTS","text":"list class slrTS elements fits list lasso fits ncvreg_args arguments passed ncvreg gamma (negative) exponent penalty weights, one   fit n_lags_max maximum number lags y time series X utilized matrix exogenous features oos_results results test data using best fits train_idx index observations used training data x invisibly vector model coefficients x (invisibly) summary object produced ncvreg   evaluated best tuning parameter combination   (best AICc).","code":""},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform time series ranked sparsity methods — fastTS","text":"default weights exogenous features chosen based similar approach adaptive lasso (using bivariate OLS estimates). lower dimensional X, advised set w_exo=\"unpenalized\", allows statistical inference exogenous variable coefficients via summary function.","code":""},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform time series ranked sparsity methods — fastTS","text":"Breheny, P. Huang, J. (2011) Coordinate descent algorithms   nonconvex penalized regression, applications biological feature   selection. Ann. Appl. Statist., 5: 232-253. Peterson, R.., Cavanaugh, J.E. Ranked sparsity: cogent regularization   framework selecting estimating feature interactions   polynomials. AStA Adv Stat Anal (2022).   https://doi.org/10.1007/s10182-021-00431-7","code":""},{"path":[]},{"path":"https://petersonr.github.io/fastTS/reference/fastTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform time series ranked sparsity methods — fastTS","text":"","code":"data(\"LakeHuron\") fit_LH <- fastTS(LakeHuron) fit_LH #>  PF_gamma best_AICc best_BIC #>      0.00  147.2053 159.8118 #>      0.25  146.3811 156.7937 #>      0.50  146.0177 156.4739 #>      1.00  144.1002 154.4967 #>      2.00  143.0362 153.2544 #>      4.00  149.8227 156.1558 #>      8.00  149.8227 156.1558 #>     16.00  149.8227 156.1558 #>  #> Test-set prediction accuracy #>       rmse       rsq       mae #> AIC 0.7751 0.6203825 0.5888855 #> BIC 0.7751 0.6203825 0.5888855 coef(fit_LH) #>                 0.00069 #> (Intercept) 111.8740292 #> lag1          1.1003545 #> lag2         -0.4732437 #> lag3          0.1796316 #> lag4          0.0000000 #> lag5          0.0000000 #> lag6          0.0000000 #> lag7          0.0000000 #> lag8          0.0000000 #> lag9          0.0000000 plot(fit_LH)"},{"path":"https://petersonr.github.io/fastTS/reference/internal.html","id":null,"dir":"Reference","previous_headings":"","what":"internal AICc function for lasso models — AICc","title":"internal AICc function for lasso models — AICc","text":"internal AICc function lasso models Internal function obtaining oos results Internal function converting time series model matrix lags","code":""},{"path":"https://petersonr.github.io/fastTS/reference/internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal AICc function for lasso models — AICc","text":"","code":"AICc(fit, eps = 1)  get_oos_results(fits, ytest, Xtest)  get_model_matrix(y, X = NULL, n_lags_max)"},{"path":"https://petersonr.github.io/fastTS/reference/internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal AICc function for lasso models — AICc","text":"fit object logLik method, eps minimum df used computation fits list fits different tuning parameters ytest validation data Xtest new X data, including lags y time series vector X Additional exogenous features n_lags_max Maximum number lags add","code":""},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict function for fastTS object — predict.fastTS","title":"Predict function for fastTS object — predict.fastTS","text":"Predict function fastTS object","code":""},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict function for fastTS object — predict.fastTS","text":"","code":"# S3 method for fastTS predict(object, n_ahead = 1, X_test, y_test, cumulative = 0, ...)"},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict function for fastTS object — predict.fastTS","text":"object fastTS object n_ahead number times ahead predict iteration X_test matrix exogenous features y_test test series; needed future predictions (optional; see details) cumulative cumulative (rolling) sums returned (integer indicating number times sum) ... currently unused","code":""},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict function for fastTS object — predict.fastTS","text":"vector predictions","code":""},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict function for fastTS object — predict.fastTS","text":"`y_test` argument must supplied forecasts desired `n_ahead` < `nrow(X_test)`. order obtain 1-step forecast , say, 10th observation test data set, 9th observation `y_test` required. length `y_test` determine many forecasts produce. order get true forecasts first 30 observations training set, one must (currently) produce set 1-step, 2-step, 3-step, ..., 30-step ahead predictions.","code":""},{"path":"https://petersonr.github.io/fastTS/reference/predict.fastTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict function for fastTS object — predict.fastTS","text":"","code":"data(\"LakeHuron\") fit_LH <- fastTS(LakeHuron) predict(fit_LH) #>  [1]       NA       NA       NA       NA       NA       NA       NA       NA #>  [9]       NA 581.0125 580.7219 580.9960 581.1889 580.5357 580.1159 579.7550 #> [17] 579.7761 578.8827 579.2512 579.5325 579.4836 578.1434 578.5270 579.3470 #> [25] 578.8931 579.3384 578.6304 579.4781 578.8051 579.0307 579.8600 579.5126 #> [33] 579.5211 579.7656 579.7974 579.0669 578.6431 578.2998 578.9424 579.5938 #> [41] 578.5703 578.1132 579.8013 579.8827 579.7640 579.2026 579.2054 578.5818 #> [49] 579.0279 577.9377 578.0709 576.9041 577.3496 578.3401 578.7360 580.6749 #> [57] 578.6937 577.2520 577.5200 577.4140 576.5386 577.5373 577.1386 577.2966 #> [65] 578.2541 578.2710 577.5091 577.5881 578.9097 579.6057 578.6401 579.3499 #> [73] 579.1059 579.3386 578.9476 577.8435 578.5245 580.0310 580.5006 579.7886 #> [81] 579.6993 579.4481 578.5976 578.2988 577.3532 577.6201 579.6514 577.7694 #> [89] 578.1514 577.0373 576.4356 577.6168 578.0205 578.5252 578.5060 579.9080 #> [97] 578.8826 579.9434"},{"path":"https://petersonr.github.io/fastTS/reference/uihc_ed_arrivals.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly arrivals into the University of Iowa Hospital Emergency Department — uihc_ed_arrivals","title":"Hourly arrivals into the University of Iowa Hospital Emergency Department — uihc_ed_arrivals","text":"data set containing 17 columns described . 41640 observations running 2013 2018. Data set already sorted time.","code":""},{"path":"https://petersonr.github.io/fastTS/reference/uihc_ed_arrivals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly arrivals into the University of Iowa Hospital Emergency Department — uihc_ed_arrivals","text":"","code":"uihc_ed_arrivals"},{"path":"https://petersonr.github.io/fastTS/reference/uihc_ed_arrivals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly arrivals into the University of Iowa Hospital Emergency Department — uihc_ed_arrivals","text":"data frame 17 columns 41640 rows: Year Calendar year Quarter Fiscal year quarter Month Integer month year Day Integer day month Hour Integer hour day Arrivals Number arrivals ED (outcome) Date Date Weekday Indicator day week temp hourly concurrent temperature xmas Christmas day indicator xmas2 Day Christmas nye New Years Eve indicator nyd New Years Day indicator thx Thanksgiving day indicator thx Thanksgiving day () indicator ind Independence day indicator game_Day Hawkeye football game day indicator","code":""},{"path":"https://petersonr.github.io/fastTS/reference/uihc_ed_arrivals.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hourly arrivals into the University of Iowa Hospital Emergency Department — uihc_ed_arrivals","text":"UIHC Emergency Department.","code":""},{"path":"https://petersonr.github.io/fastTS/news/index.html","id":"fastts-012","dir":"Changelog","previous_headings":"","what":"fastTS 0.1.2","title":"fastTS 0.1.2","text":"Renaming package fastTS, functions Add unit tests srlTS (fastTS) function","code":""}]
